<!DOCTYPE html>
<html>
    <head>
        <title>Features</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script> 
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
        <link href='https://fonts.googleapis.com/css?family=Lato' rel='stylesheet' type='text/css'>
        <style>
          body {
            font-family: Lato, sans-serif;
            color: #395a6b;
          }
          table {
            width: 60em;
          }
          table, tr, th, td {
            text-align: left;
            border: 0px;
            border-collapse: collapse;
            margin: 0px;
            padding: 5px;
          }
          .pass {
            background-color: #DDFFDD;
          }
          .fail {
            background-color: #FFDDDD;
          }
          .skip {
            background-color: #FFFFDD;
          }
          .incomplete {
            background-color: #b2beb5;
          }
           .list-group {
            margin-bottom: 0px;
          }
           .list-group-item {
            padding-top: 0px;
            padding-bottom: 0px;
            padding-right: 0px;
            border-top: 0px;
            border-bottom: 0px;
            border-right: 0px;
            border-left: 1px;
            width: 100%;
          }
           .behavior, .directory, .feature, .background, .scenario {
            padding-top: 10px !important;
            padding-bottom: 10px !important;
          }
           .itemContainer {
            /*border-left: 0px !important;*/
          }
           .featureContainer {
            border-bottom: 1px !important;
            border-right: 1px !important;
            border-left: 1px !important;
          }
           .test {
            padding-right: 15px !important;
          }
        </style>
    </head>
    <script>
        $(document).ready(function(){
            $('.arrow').click(function (e) {
                var idArrow = e.target.id + '-arrow';
                $('#'+idArrow).toggleClass("glyphicon-chevron-right glyphicon-chevron-down");
                e.preventDefault();
            });
        });
    </script>
    <body>
<%
var datum = data;
var features = datum.features;
var dirs = datum.dirs;
var version = datum.version;
var stateCounter = {'incomplete':0, 'fail':0, 'skip':0, 'pass':0};

function getTag (tags, lineNumber) {
    var exists = false;
    tags.forEach(function(tag) {
        if (tag.getLine() + 1 === lineNumber) {
            if (tag.getName() === '@manual') {
                exists = true;
            }
        }
    });
    return exists;
}
function write() {
    var state = 'pass';
    var id = 'behavior';
    dirs.forEach(function(dir, index){
        state = checkState(state,writeDir(index, false));
    });
    var message = '';
    switch(state) {
        case 'incomplete':
            message = 'SOME TESTS ARE INCOMPLETE';
            break;
        case 'fail':
            message = 'SOME TESTS FAILED';
            break;
        case 'skip':
            message = 'SOME TESTS WERE SKIPPED';
            break;
        case 'pass':
            message = 'ALL TESTS PASSED';
            break;
    }
%>
        <div class="container">
            <table class="table table-condensed">
                <thead>
                    <tr>
<%
    Object.keys(stateCounter).sort().forEach(function(key){
%>
                        <th class=<%=getClass('',key)%> ><%=key.toUpperCase()%></th>
<%
    });
%>
                        <th>TOTAL</th>
                    </tr>
                </thead>
                <tbody>
<%
    var total = 0;
    Object.keys(stateCounter).sort().forEach(function(key){
            total = total + stateCounter[key];
%>
                        <td class=<%=getClass('',key)%> ><%=stateCounter[key]%></td>
<%
    });
%>
                    <td><%=total%></td>
                </tbody>
            </table>
            <ul class="list-group">
                <li class=<%=getClass("list-group-item behavior", state)%>>
                    <div class="firstLine arrow" data-toggle="collapse" data-target= <%=getID('#' + id + '-child')%> id= <%=getID(id)%> >
                        <span class="glyphicon glyphicon-chevron-right" id= <%=getID(id + '-arrow')%> ></span>
                        <%=message %>
                    </div>
                </li>
                <li class="list-group-item bContainer" id= <%=getID(id + '-container')%> >
                    <div class= <%='"collapse' + ((state !== 'pass') ? ' in"' : '"') %> id= <%=getID(id + '-child')%> >
                        <ul class="list-group">
<%
    dirs.forEach(function(dir,index) {
        var dir_id = id + '-' + dir.replace(/\s+/g, '');
        console.log('Processing folder ' + dir);
        writeDir(index, true, dir_id);
    });
%>
                        </ul>
                    </div>
                </li>
            </ul>
        </div>
<%
}

function writeDir(index, htmlOut, id) {
    var state = 'pass';
    var mCounter = 0;
    features[index].forEach(function(feature){
        var payload = writeFeature(feature, false);
        state = checkState(state, payload.state);
        if(payload.isManual) {
            mCounter = mCounter + 1;
        }
    });
    if (htmlOut) {
        if (mCounter !== 0) {
%>
                            <li class=<%=getClass("list-group-item directory", state)%>>
                                <div class="firstLine arrow" data-toggle="collapse" data-target= <%=getID('#' + id + '-child')%> id= <%=getID(id)%> >
                                    <span class="glyphicon glyphicon-chevron-right" id= <%=getID(id + '-arrow')%> ></span>
                                    <%=dirs[index]%>
                                </div>
                            </li>
                            <li class="list-group-item dirContainer" id= <%=getID(id + '-container')%> >
                                <div class= <%='"collapse' + ((state !== 'pass') ? ' in"' : '"') %> id= <%=getID(id + '-child')%> >
                                    <ul class="list-group">
<%
            features[index].forEach(function(feature, ind) {
                var feature_id = id + '-feature-' + ind;
                writeFeature(feature, true, feature_id);
            });
%>
                                    </ul>
                                </div>
                            </li>
<%
        } else {
            console.log('No manual feature files found.');
        }
    }
    return state;
}

function writeFeature(feature, htmlOut, id){
    var rtnObj = {'state': 'pass', 'isManual': false};
    var scenarios = feature.getFeatureElements();
    var mCounter = 0;
    var allAreManual = getTag(feature.getTags(), 2);
    scenarios.forEach(function(scenario) {
        var payload = writeScenario(scenario, false, allAreManual);
        if (allAreManual || payload.isManual) {
            mCounter = mCounter + 1;
        }
        rtnObj.state = checkState(rtnObj.state,payload.state);
    });
    rtnObj.isManual = (mCounter !== 0);
    if (htmlOut) {
        if(rtnObj.isManual) {
            console.log('Processing feature ' + feature.getName());
%>
                                        <li class=<%=getClass("list-group-item feature", rtnObj.state)%>>
                                            <div class="firstLine arrow" data-toggle="collapse" data-target= <%=getID('#' + id + '-child')%> id= <%=getID(id)%> >
                                                <span class="glyphicon glyphicon-chevron-right" id= <%=getID(id + '-arrow')%> ></span>
                                                <%=writeFirstLine(feature)%>
                                            </div>
                                        </li>
                                        <li class="list-group-item featureContainer" id= <%=getID(id + '-container')%> >
                                            <div class= <%='"collapse' + ((rtnObj.state !== 'pass') ? ' in"' : '"') %> id= <%=getID(id + '-child')%> >
                                                <ul class="list-group">
<%
            checkForDescription(feature, id);
            checkForBackground(feature, id);
            scenarios.forEach(function(scenario, ind) {
                var scenario_id = id + '-scenario-' + ind;
                writeScenario(scenario, true, allAreManual, scenario_id);
            });
%>
                                                </ul>
                                            </div>
                                        </li>
<%
        } else {
            console.log('No manual scenarios found.');
        }
    }
    return rtnObj;
}

function writeDescription(description, i) {
    var lines = description.split('\n');
    var id = i + '-description';
%>
                                                    <li class="list-group-item description" id= <%=getID(id)%> >
<%
    lines.forEach(function(line) {
%>
                                <%=line%><br>
<%
        });
%>
                            </li>
<%
}

function writeBackground(background, i) {
    var steps = background.getSteps();
    var id = i + '-background';
%>
                                                    <li class="list-group-item background"><div class="firstLine arrow" data-toggle="collapse" data-target= <%=getID('#' + id + '-child')%> id= <%=getID(id)%> >
                                                        <span class="glyphicon glyphicon-chevron-right" id= <%=getID(id + '-arrow')%> ></span>
                                                        <%=writeFirstLine(background)%>
                                                    </div></li>

<%
    checkForDescription(background);
%>
                                                    <li class="list-group-item itemContainer" id= <%=getID(id + '-container')%> >
                                                        <div class="collapse" id= <%=getID(id + '-child')%> >
                                                            <ul class="list-group">
<%
    steps.forEach(function(step,ind) {
        var step_id = id + '-step-' + ind;
        writeStep(background, step, true, true, step_id);
    });
%>
                                                            </ul>
                                                        </div>
                                                    </li>
<%
}

function writeScenario(scenario, htmlOut, allAreManual, id) {
    var rtnObj = {'state': 'pass','isManual': false};
    var steps = scenario.getSteps();
    var tags = [];
    if (scenario.getTags) {
        tags = scenario.getTags();
        if (allAreManual || getTag(tags, scenario.getLine())) {
            steps.forEach(function(step) {
                rtnObj.state = checkState(rtnObj.state,writeStep(scenario, step, false, false));
            });
            if (htmlOut) {
%>
                                                    <li class=<%=getClass("list-group-item scenario", rtnObj.state)%>><div class="firstLine arrow" data-toggle="collapse" data-target= <%=getID('#' + id + '-child')%> id= <%=getID(id)%> >
                                                        <span class="glyphicon glyphicon-chevron-right" id= <%=getID(id + '-arrow')%> ></span>
                                                        <%=writeFirstLine(scenario)%>
                                                    </div></li>
<%
                checkForDescription(scenario);
%>
                                                    <li class="list-group-item itemContainer" id= <%=getID(id + '-container')%> >
                                                        <div class= <%='"collapse' + ((rtnObj.state !== 'pass') ? ' in"' : '"') %> id= <%=getID(id + '-child')%> >
                                                            <ul class="list-group">
<%
                steps.forEach(function(step,ind) {
                    var step_id = id + '-step-' + ind;
                    writeStep(scenario, step, false, true, step_id);
                });
%>
                                                            </ul>
                                                        </div>
                                                    </li>
<%
            }
            rtnObj.isManual = true;
        }
    }
    return rtnObj;
}

function writeStep(scenario, step, back, htmlOut, id) {
    var state = '';
    var firstLine = step.getKeyword() + step.getName();
    if (step.hasAttachment() && step.hasDataTable()) {
        var tests = step.getDataTable().getTestResults();
        var newTests = [];
        if (tests) {
            tests.forEach(function(test) {
                // We only take the first result as the status for the overall step. getTestResults() sorts the
                // test results by version before returning them, so we know that the first item is the 'latest' item.
                if (state === '') {
                    var newState = test.getResult();
                    if (newState !== 'pass' && newState !== 'fail' && newState !== 'skip') {
                        var msg = 'Unrecognized test result "' + newState + '"\n';
                        msg += 'Scenario: ' + scenario.getName() + '\n';
                        msg += 'Step: ' + firstLine + '\n';
                        throw new Error(msg);
                    }
                    state = test.getResult();
                }
                
                if (version.test('ALL') || version.test(test.getVersion())) {
                    newTests.push(test);
                }
            });
        }
        if (newTests.length === 0){
            state = 'incomplete';
        }
    } else if (!back) {
        state = 'incomplete';
    }
    if (htmlOut) {
        if (back) {
%>
                                                                <li class="list-group-item step"><div class="firstLine" id= <%=getID(id)%> >
<%
        } else {
%>
                                                                <li class=<%=getClass("list-group-item step", state)%>><div class="firstLine arrow" data-toggle="collapse" data-target= <%=getID('#' + id + '-child')%> id=<%=getID(id)%> >
<%
            if ((step.hasDataTable() && newTests.length != 0) || (step.hasDataTable() && step.getDataTable().raw()[0].length !== 4 && step.getDataTable().raw().length != 0)) {
%>
                                                                    <span class="glyphicon glyphicon-chevron-right" id= <%=getID(id + '-arrow')%> ></span>
<%      
            }
        }
%>
                                                                    <%=firstLine%>
                                                                </div></li>
<%
        if (step.hasAttachment()) { 
            if (step.hasDataTable() && step.getDataTable().raw()[0].length === 4) {
%>
                                                                <li class="list-group-item itemContainer" id= <%=getID(id + '-container')%> >
                                                                    <div class= <%='"collapse' + ((state !== 'pass') ? ' in"' : '"') %> id= <%=getID(id + '-child')%> >
                                                                        <ul class="list-group">
                                                                            <li class="list-group-item test">
<%
                newTests.forEach(function(test) {
                    writeTest(test.raw());
                });
%>
                                                                            </li>
                                                                        </ul>
                                                                    </div>
                                                                </li>
<%
            } else if (step.hasDataTable() && step.getDataTable().raw()[0].length !== 4) {
                var rows = step.getDataTable().getRows();
%>
                                                                <li class= <%=getClass("list-group-item data", pass)%> >
                                                                    <table class="table table-condensed">
                                                                        <tbody>
<%
                rows.forEach(function(row) {
                    writeRawTable(row.raw());
                });
%>                                      
                                                                        </tbody>
                                                                    </table>
                                                                </li>
<%
            }
        }
    }
    if (!back) {
        stateCounter[state] = stateCounter[state] + 1;
    }
    return state;
}

function writeRawTable(raw) {
%>
                                                                                        <tr>
<%
    raw.forEach(function(element) {
%>
                                                                                            <td><%=element%></td>
<%
    });
%>
                                                                                        </tr>
<%
}

function writeTest(raw) {
    var keyword = raw[0].toLowerCase() + '"';
%>
                                                                                <div class= <%= '"row ' + keyword%> >
<%
    raw.forEach(function(element) {
%>
                                                                                    <div class="col-sm-3"><%= element %></div>
<%
    });
%>
                                                                                </div>
<%
}

function getClass(className, state) {
    return '"' + className + ' ' + state + '"';
}

function getID(id) {
    var out = '"' + id + '"';
    return out;
}

function checkForDescription(element, id) {
    if (element.getDescription() && element.getDescription().length > 0) {
        var description = element.getDescription();
        writeDescription(description, id);
    }
}

function checkForBackground(element, id) {
    if (element.getBackground()) {
        var background = element.getBackground();
        writeBackground(background, id);
    }
}

function checkState(x,y) {
    if (x === 'incomplete' || y === 'incomplete') {
        return 'incomplete';
    } else if(x === 'fail' || y === 'fail') {
        return 'fail';
    } else if(x === 'skip' && y === 'skip') {
        return 'skip';
    } else {
        return 'pass';
    }
}

function writeFirstLine(element) {
    return element.getKeyword() + ': ' + element.getName();
}

write();
%>
    </body>
</html>
